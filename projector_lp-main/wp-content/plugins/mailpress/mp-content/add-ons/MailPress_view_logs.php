<?php
if ( ( class_exists( 'MailPress' ) ) && !class_exists( 'MailPress_view_logs' ) && ( is_admin() ) )
{
/*
Plugin Name: MailPress_view_logs
Plugin URI: http://blog.mailpress.org/tutorials/add-ons/view_logs/
Description: Logs ( view logs stored in upload folder generated by MailPress in your browser )
Version: 7.2
*/

// 3.

/** for admin plugin pages */
define ( 'MailPress_page_view_logs', 	'mailpress_viewlogs' );
define ( 'MailPress_page_view_log', 		MailPress_page_view_logs . '&file=view_log' );

/** for admin plugin urls */
$mp_file = 'admin.php';
define ( 'MailPress_view_logs',		add_query_arg( 'page', MailPress_page_view_logs, 	$mp_file ) );
define ( 'MailPress_view_log',		add_query_arg( 'page', MailPress_page_view_log, 	$mp_file ) );

class MailPress_view_logs
{
	function __construct()
	{
	// for role & capabilities
		add_filter( 'MailPress_capabilities',  		array( __CLASS__, 'capabilities' ), 1, 1 );
	// for load admin page
		add_filter( 'MailPress_load_admin_page', 		array( __CLASS__, 'load_admin_page' ), 10, 1 );
	// for autorefresh
		add_filter( 'MailPress_autorefresh_files_js',	array( __CLASS__, 'autorefresh_js' ), 8, 1 );
 
	// for wp admin
		if ( is_admin() )
		{
		// for link on plugin page
			add_filter( 'plugin_action_links', 			array( __CLASS__, 'plugin_action_links' ), 10, 2 );
		}
	}

////  Admin  ////

// for role & capabilities
	public static function capabilities( $capabilities )
	{
		$capabilities['MailPress_view_logs'] = array( 	'name'	=> __( 'Logs', 'MailPress' ),
										'group'	=> 'admin',
										'menu'	=> 99,

										'parent'	=> false,
										'page_title'=> __( 'MailPress Logs', 'MailPress' ),
										'menu_title'=> __( 'Logs', 'MailPress' ),
										'page'	=> MailPress_page_view_logs,
										'func'	=> array( 'MP_AdminPage', 'body' )
									 );
		return $capabilities;
	}

// for load admin page
	public static function load_admin_page( $hub )
	{
		$hub[MailPress_page_view_logs] = 'view_logs';
		$hub[MailPress_page_view_log]  = 'view_log';
		return $hub;
	}

// for autorefresh
	public static function autorefresh_js( $scripts )
	{
		return MP_WP_AutoRefresh_js::getInstance( $scripts, true );
	}

// for link on plugin page
	public static function plugin_action_links( $links, $file )
	{
		return MailPress::plugin_links( $links, $file, plugin_basename( __FILE__ ), 'logs' );
	}
}
new MailPress_view_logs();
}