<?php
if ( class_exists( 'MailPress' ) && !class_exists( 'MailPress_comment_newsletter_subscription' ) )
{
/*
Plugin Name: MailPress_newsletter_default_subscription
Plugin URI: http://blog.mailpress.org/tutorials/add-ons/newsletter_default_subscription/
Description: Newsletters : Subscribe to default newsletter from comment form  ( <span style="color:red;">required !</span> <span style="color:#D54E21;">Newsletter</span> add-on )
Version: 7.2
*/

class MailPress_comment_newsletter_subscription
{
	const option_name = 'MailPress_comment_newsletter_subscription';

	public static $mp_user_id = false;

	function __construct()
	{
// for wordpress hooks
// for comment
		add_action( 'comment_form', 				array( __CLASS__, 'comment_form' ) );
		//add_filter( 'comment_form_default_fields', 	array( __CLASS__, 'comment_form_default_fields' ), 1, 1 );
		add_action( 'comment_post', 				array( __CLASS__, 'comment_post' ), 1, 1 );

// for wp admin
		if ( is_admin() )
		{
		// for link on plugin page
			add_filter( 'plugin_action_links', 			array( __CLASS__, 'plugin_action_links' ), 10, 2 );
		// for settings subscriptions
			add_filter( 'MailPress_settings_subscriptions_newsletter_help',	array( __CLASS__, 'settings_subscriptions_help' ), 21, 1 );
			add_action( 'MailPress_settings_subscriptions_newsletter_form',	array( __CLASS__, 'settings_subscriptions_form'), 21 );
		}
	}

////	Plugin  ////

	public static function comment_form( $post_id ) 
	{
		$out = '';

		$txtsubcomment = __( "Notify me of new posts via email.", 'MailPress' );

		$settings 	= get_option( self::option_name );
		$nls 		= MP_Newsletter::get_active();
		if ( !isset( $nls[$settings['default']] ) ) return;

		$email 	= MP_WP_User::get_email();

		if ( is_email( $email ) )
		{
			$mp_user_id = MP_User::get_id_by_email( $email );
			if ( $mp_user_id )
			{
				$subscriptions = MP_Newsletter::get_object_terms( $mp_user_id );
				if ( isset( $subscriptions[$settings['default']] ) ) return;
			}
		}

		$out .= '<!-- start of code generated by MailPress -->' . "\r\n";
		$out .= '<div class="MailPressCommentNewsletterform" style="clear:both;">' . "\r\n";
		$out .= '<label for="MailPress_subscribe_to_comment_newsletter">' . "\r\n";
		$out .= '<input type="checkbox" name="MailPress[subscribe_to_comment_newsletter]" id="MailPress_subscribe_to_comment_newsletter" class="MailPressCommentNewsletterformCheckbox" style="margin:0;padding:0;width:auto;" ' . checked( isset( $settings['checked'] ), true, false ) . ' />' . "\r\n";
		$out .= '<span>' . $txtsubcomment . '</span>' . "\r\n";
		$out .= '</label>' . "\r\n";
		$out .= '</div>';
		$out .= '<!-- end of code generated by MailPress -->' . "\r\n";

		echo $out;
	}

	public static function comment_form_default_fields( $fields ) 
	{
		$settings 	= get_option( self::option_name );
		$nls 		= MP_Newsletter::get_active();
		if ( !isset( $nls[$settings['default']] ) ) return;

		$post_id = get_the_ID();

		$email = MP_WP_User::get_email();

		if ( MailPress::is_email( $email ) )
		{
			$mp_user_id = MP_User::get_id_by_email( $email );
			if ( $mp_user_id )
			{
				$subscriptions = MP_Newsletter::get_object_terms( $mp_user_id );
				if ( isset( $subscriptions[$settings['default']] ) ) return;
			}
		}

		$fields['mailpress-comment-newsletter']  = '<!-- start of code generated by MailPress -->' . "\n";
		$fields['mailpress-comment-newsletter'] .= '<p class="comment-form-cookies-consent comment-newsletter-form-mailpress MailPressCommentNewsletterformCheckbox"><input name="MailPress[subscribe_to_comment_newsletter]" id="MailPress_subscribe_to_comment_newsletter" type="checkbox"' . checked( isset( $settings['checked'] ), true, false ) . ' />' . 
											'<label for="MailPress_subscribe_to_comment_newsletter">' .  __( 'Notify me of new posts via email.', 'MailPress' ) . '</label>' . 
											'</p>' . "\n";
		$fields['mailpress-comment-newsletter'] .= '<!-- end of code generated by MailPress -->' . "\n";
		return $fields;
	}

	public static function comment_post( $id ) 
	{
		global $wpdb, $comment;

		$comment 	= $wpdb->get_row( "SELECT * FROM $wpdb->comments WHERE comment_ID = $id LIMIT 1" );
		if ( 'spam' == $comment->comment_approved ) return;

		$name 	= $comment->comment_author;

		$settings 	= get_option( self::option_name );
		$nls 		= MP_Newsletter::get_active();
		if ( !isset( $nls[$settings['default']] ) ) return;

		$email 	= MP_WP_User::get_email();

		$post_ = filter_input_array( INPUT_POST );

		if ( MailPress::is_email( $email ) )
		{
			$mp_user_id = MP_User::get_id_by_email( $email );
			if ( $mp_user_id )
			{
				MP_User::set_status( $mp_user_id, 'active' );
				$subscriptions = MP_Newsletter::get_object_terms( $mp_user_id );
				if ( isset( $subscriptions[$settings['default']] ) ) return;
			}
			else
			{
				if ( isset( $post_['MailPress']['subscribe_to_comment_newsletter'] ) )
				{
					$mp_user_id = MP_User::insert( $email, $name, array( 'status' => 'active' ) );
					if ( !$mp_user_id ) return;
					self::$mp_user_id = $mp_user_id;
					add_filter( 'MailPress_user_already_inserted', array( __CLASS__, 'user_already_inserted' ), 1 );
				}
			}
			$subscriptions[$settings['default']] = $settings['default'];
			MP_Newsletter::set_object_terms( $mp_user_id, $subscriptions );
		}
	}

	public static function user_already_inserted()
	{
		return self::$mp_user_id;
	}

////  ADMIN  ////
////  ADMIN  ////
////  ADMIN  ////
////  ADMIN  ////

// for link on plugin page
	public static function plugin_action_links( $links, $file )
	{
		return MailPress::plugin_links( $links, $file, plugin_basename( __FILE__ ), 'subscriptions' );
	}

// for settings subscriptions
	public static function settings_subscriptions_help( $content )
	{
		include ( MP_ABSPATH . 'mp-admin/includes/settings/subscriptions/newsletter/default_subscription/help.php' );
		return $content;
	}

	public static function settings_subscriptions_form()
	{
		include ( MP_ABSPATH . 'mp-admin/includes/settings/subscriptions/newsletter/default_subscription/form.php' );
	}
}
new MailPress_comment_newsletter_subscription();
}